body{
    /* https://codepen.io/wqsuasrc-the-looper/pen/yyLvVgw */
    timeline-scope: --rangePercentage;
    animation: --rangePercentageAni linear both;
    animation-timeline: --rangePercentage;
    animation-range: entry 100% exit 0%;

    --standard-width:6em;
    --animation-duration:1.1s;
    --interaction-color:rgb(86, 86, 86);
    --module-color:tan;
    --detail-color:rgb(37, 38, 37);
}

main {
    height: 96vh;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
}

h1{
    font-family: "Inconsolata", monospace;
    font-weight: calc(900*var(--dial));
}

fieldset {
    border: 0;
    padding: 0;
    margin: 0;
}

input {
    margin: 0;
}

@keyframes setZIndex {
    to {
        z-index: 0; 
    }
}

@property --dial {
    syntax: "<number>";
    inherits: true;
    initial-value: 0;
}

@property --rangePercentageValue {
    syntax: "<number>";
    inherits: true;
    initial-value: 0; 
  }
  
@keyframes --rangePercentageAni {
    0% {--rangePercentageValue: 1}
    100% {--rangePercentageValue: 0}
  }

/* ===============
form
=============== */

form{
    display: grid;
    grid-template-rows: var(--standard-width) 0fr;
    grid-template-columns: var(--standard-width) 0fr;
}


/* ===============
button
=============== */

fieldset:nth-of-type(1) {
    grid-column: 1/2;
    grid-row: 1/2;
    display: flex;
    justify-content: center;
    align-items: center;
    border-radius: 5px;
    background: var(--module-color);

    &::before {
        content: "";
        position: absolute;
        width: 8px;
        height: 8px;
        border-radius: 50%;
        box-shadow: 30px 30px var(--detail-color), -30px 30px var(--detail-color), 30px -30px var(--detail-color),-30px -30px var(--detail-color);
    }
}

fieldset:nth-of-type(1) label{
    display: flex;
    justify-content: center;
    align-items: center;
}

fieldset:nth-of-type(1) input[type="checkbox"] {
    position: absolute;
    cursor: pointer;
    appearance: none;
    display: flex;
    justify-content: center;
    margin-bottom: 4px;
    transition: margin-bottom 0.3s ease-in-out;
    
    &::before {
        content: "";
        width: 4em;
        height: 4em;
        border-radius: 50%;
        background-color: var(--interaction-color);
        box-shadow: 0px 4px 0px rgb(42, 42, 42);
        transition: 0.3s ease-in-out;
    }  

    &:valid{
        margin-bottom: 0;
    }

    &:valid::before {
        box-shadow: 0px 0px 0px rgb(42, 42, 42), inset 0 4px 0px rgb(42, 42, 42),inset 0 0 10px black;
        transform: translateY(2px);
    }
}

/* ===============
reset button
=============== */

fieldset:nth-of-type(1) input[type="reset"] {
    color: rgb(215, 215, 215);
    padding: 0;
    border: none;
    position: absolute;
    visibility: hidden;
    width: 4em;
    height: 4em;
    border-radius: 50%;
    background-color: var(--interaction-color);
    cursor: pointer;
    box-shadow: 0px 0px 0px rgb(42, 42, 42), inset 0 4px 0px rgb(42, 42, 42),inset 0 0 10px black;
    transition: 0.3s ease-in-out;
}

@keyframes resetbutton {
    1%, 99%{
        visibility: hidden;
    }
    
    100% {
        visibility: visible;
    }
}

fieldset:nth-of-type(1):has(input[type="checkbox"]:checked) input[type="reset"]{
    animation: resetbutton 0.3s linear forwards;
    margin-top: 4px;
}

/* ===============
slider
=============== */

fieldset:nth-of-type(2){
    grid-column: 2/3;
    grid-row: 1/2;
    display: flex;
    z-index: -1;
    justify-content: center;
    align-items: center;
    width: 100%;
    height: 100%;
    border-radius: 5px;
    background: var(--module-color);
    transition: width var(--animation-duration) ease-in-out, transform var(--animation-duration) ease-in-out;
}

fieldset:nth-of-type(2) label{
    height: 80%;
    width: 90%;
}

/* https://css-tricks.com/styling-cross-browser-compatible-range-inputs-css/ */
/* https://codepen.io/wqsuasrc-the-looper/pen/emYELqz?editors=0100 inspiratie genomen van Ana tudor slider*/ 
fieldset:nth-of-type(2) input[type="range"]{
    -webkit-appearance: none;
    width: 100%;
    height: 100%;
    transition: width var(--animation-duration) ease-in-out, transform var(--animation-duration) ease-in-out;

  background: 
  linear-gradient(90deg, var(--detail-color) 1.5px, transparent 3px),
  linear-gradient(90deg, var(--detail-color) 1.5px, transparent 3px),
    linear-gradient(90deg, var(--interaction-color) 3px, transparent 0), 
    linear-gradient(90deg, var(--interaction-color) 3px, transparent 0) ;
  background-clip:content-box;
  background-position: 
  6px 100%,6px 0px, 7px 0px,7px 100%;
  background-repeat: repeat-x;
  background-size: calc(9em/10) 1em;
	background-color: currentcolor;
	color: transparent;
  font-size: 1em;
  cursor: pointer;
  overflow: hidden;

  &::-webkit-slider-thumb {
    -webkit-appearance: none;
    background: rgb(215, 215, 215);
    border: solid var(--interaction-color);
    border-width: 0px 8px;  
    cursor: pointer;
    border-radius: 4px;
    height: 3em;
    width: 20px;
    transform: translateY(-1em);
    box-shadow: rgb(27, 27, 27) 0px 3px 2px;
    cursor: ew-resize;

    view-timeline: --rangePercentage inline;
}

    &:focus {
        outline: none;
    }

    &::-webkit-slider-runnable-track {
        width: 100%;
        height: 1em;
        cursor: default;
        background: #121212;
        border-radius: 2px;
        box-shadow: inset 0 .125em .25em #000000, inset 0 0 0 .25em var(--interaction-color);
    }
}

/* slider animations
==================== */

form:has(input[type="checkbox"]:invalid) fieldset:nth-of-type(2) {
    z-index: -1;
}

form:has(input[type="checkbox"]:valid) fieldset:nth-of-type(2) {
    width: calc(var(--standard-width)*2);
    height: var(--standard-width);
    animation: setZIndex 0s linear var(--animation-duration) forwards;
}

form:has(input[type="checkbox"]:valid) input[type="range"]{
    cursor: pointer;
}

/* ===============
dial
=============== */
fieldset:nth-of-type(3) {
    container-type: size;
    container-name: dial;
    grid-column: 1/3;
    grid-row: 2/3;
    display: flex;
    z-index: -2;
    width: var(--standard-width);
    height: 0;
    justify-content: center;
    align-items: center;
    border-radius: 5px;
    background: var(--module-color);
    transition: width var(--animation-duration) ease-in-out;

    label[for="dial"]{
        display: flex;
        position: relative;
        justify-content: center;
        align-items: center;
        border-radius:50%;
        width: 70%;
        height: 70%;
        background: var(--interaction-color);
        border: solid 8px var(--detail-color);
        box-shadow: 0px 8px 0px var(--interaction-color), 0px 15px 10px black;
        opacity: calc(200% * var(--rangePercentageValue));

        /* https://codepen.io/shooft/pen/OPJxyQW */
        &::before{
        content:"";
        position:absolute;
        inset:0;
        
        --angle:120deg;
        --angle-thumb:calc( var(--angle) * -1 + var(--angle) * 2 * var(--dial) );
        
        background-image:
            radial-gradient(
                circle at 
                    calc(50% + sin(var(--angle-thumb)) * (12em * (.4 * var(--rangePercentageValue)) - 1em * .5) ) 
                    calc(50% - cos(var(--angle-thumb)) * (12em * (.4 * var(--rangePercentageValue)) - 1em * .5) ),
                    rgb(215, 215, 215) calc(1em * .5),
                transparent 0
            );
        }
    
        input{
            appearance:none;
            margin:0;
            display:block;
            position:absolute;
            inset:0;
            z-index:1;
            background:transparent;
    
            &::-webkit-slider-runnable-track {	
                height:100%;
            }
            
            &::-webkit-slider-thumb {
                appearance:none;
                width:1em;
                height:100%;
            }
        }
    }
}

/* dial animations
==================== */

@container dial (max-height: 2em){
    fieldset:nth-of-type(3) label[for="dial"] {
        display: none;
    }
}

@keyframes --dial{
    to{
        height: calc(var(--standard-width) * 3 * var(--rangePercentageValue));
        z-index: calc( -2 + (var(--rangePercentageValue) * 1.51) );
    }
}

fieldset:nth-of-type(1):has(input[type="checkbox"]:valid) ~ fieldset:nth-of-type(3){
    width: calc(var(--standard-width)*3);
    animation: --dial 0s linear 0.3s forwards;
}